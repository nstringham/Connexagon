rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
  	match /games/{game} {
    	allow read;
      allow update:
        if request.auth.uid == resource.data.players[resource.data.turn % resource.data.players.size()].uid
        && resource.data.winner == -1
        && request.resource.data.diff(resource.data).addedKeys() == ["move"].toSet()
        && request.resource.data.diff(resource.data).changedKeys() == [].toSet()
        && request.resource.data.diff(resource.data).removedKeys() == [].toSet()
        && request.resource.data.move.keys() == ["position"]
        && resource.data.board[request.resource.data.move.position] == -1;
    }
    match /users/{userId} {
      allow read;
      allow create, update:
        if request.auth.uid == userId
        && request.resource.data.keys() == ["nickname"]
        && request.resource.data.nickname is string
        && request.resource.data.nickname.size() < 20;
      match /private/tokens {
        allow create, update: if request.auth.uid == userId  && request.resource.data.values().hasOnly([true]);
      }
    }
    match /queues/{queueName} {
      allow update:
      if request.resource.data[request.auth.uid] == true
      && request.resource.data.diff(resource.data).addedKeys() == [request.auth.uid].toSet()
      && request.resource.data.diff(resource.data).changedKeys() == [].toSet()
      && request.resource.data.diff(resource.data).removedKeys() == [].toSet()
    }
    match /{document=**} {
      allow read;
      allow write: if false;
    }
  }
}